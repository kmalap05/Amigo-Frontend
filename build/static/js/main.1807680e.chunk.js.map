{"version":3,"sources":["Context/AuthReducer.js","Context/AuthContext.js","Pages/Signin.js","Pages/Signup.js","Components/Message.js","Components/AddAmigo.js","Components/ProfilePage.js","Components/SidebarChat.js","Components/EmptyChatRoom.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AuthReducer","state","action","type","user","payload","isLoading","error","INITIAL_STATE","JSON","parse","localStorage","getItem","isFetching","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Signin","useState","email","setEmail","password","setPassword","setError","useContext","loginCall","userCredential","axios","post","API_URL","res","data","className","class","onSubmit","e","preventDefault","htmlFor","placeholder","name","required","onChange","target","minLength","disabled","CircularProgress","color","href","to","Signup","username","setUsername","photo","setPhoto","setIsLoading","history","useHistory","handleForm","config","headers","FormData","append","push","console","log","accept","files","size","Message","message","own","text","format","createdAt","AddAmigo","addchattoggler","addchattoggle","amigousername","setAmigoUsername","process","handleSubmit","get","response","senderId","_id","receiverId","window","location","reload","onClick","src","alt","ProfilePage","toggler","togglestate","updated_data","put","result","SidebarChat","chatroomtile","currentUser","setUser","online","setOnline","socket","useRef","current","io","amigoId","members","find","m","on","users","userId","a","getAmigodetails","EmptyChatRoom","Home","chatroomtiles","setChatroomtiles","currentchat","setCurrentchat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","amigo","setAmigo","open","setOpen","scrollRef","sender","Date","now","includes","prev","emit","getChatroomtiles","getMessages","scrollIntoView","behavior","pick","setPick","sendingMessage","chatroomId","member","addtoggle","setAddtoggle","addchatToggler","profiletoggle","setProfiletoggle","profiletoggler","IconButton","style","fontSize","removeItem","map","ref","onSelect","emoji","native","emojiSize","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1807680e.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN_START\":\n            return {\n                user: action.payload,\n                isLoading: true,\n                error: false\n            };\n        case \"LOGIN_SUCCESS\":\n            return {\n                user: action.payload,\n                isLoading: false,\n                error: false\n            };\n        case \"LOGIN_FAILURE\":\n            return {\n                user: null,\n                isLoading: false,\n                error: action.payload\n            };\n\n        default:\n            return state\n    }\n}\n\nexport default AuthReducer;","import { createContext, useEffect, useReducer } from \"react\"\nimport AuthReducer from \"./AuthReducer\"\n\nconst INITIAL_STATE = {\n    user:JSON.parse(localStorage.getItem(\"user\")) || null,\n    isFetching:false,\n    error:false\n}\n\n/* Reads the data from the Provider and changes INITIAL_STATE */\nexport const AuthContext = createContext(INITIAL_STATE)\n\n/* Children here are the Components that need to get the data.[In this Application we specified App COmponent as Child in index.js so that we can server every every component exist in the app */\n/* This will provide data to all the children that we are giving here */\nexport const AuthContextProvider = ({children}) =>{\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n    useEffect(()=>{\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\n      },[state.user])\n\n    return (\n        <AuthContext.Provider\n        value={{\n            user:state.user,\n            isFetching:state.isFetching,\n            error:state.error,\n            dispatch\n        }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}","import React, { useState, useContext } from 'react'\nimport './Signin-up.css'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { AuthContext } from '../Context/AuthContext'\n\nfunction Signin() {\n\n    const [email, setEmail] = useState()   /* Instead of Using useState hook we can use useRef and keep ref in the required input field for getting data */\n    const [password, setPassword] = useState()\n    const [error, setError] = useState( \"\" )\n    const { isFetching, dispatch } = useContext( AuthContext )\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    const loginCall = async ( userCredential, dispatch ) => {\n        dispatch( { type: \"LOGIN_START\" } );\n        try {\n            const res = await axios.post( API_URL + \"api/auth/signin\", userCredential );\n            dispatch( { type: \"LOGIN_SUCCESS\", payload: res.data } );\n        }\n        catch ( err ) {\n            dispatch( { type: \"LOGIN_FAILURE\", payload: err } )\n            setError( \"Wrong Password Or Username\" )\n        }\n    }\n\n    const handleForm = ( e ) => {\n        e.preventDefault()\n        loginCall( { email, password }, dispatch )\n    }\n\n    return (\n        // ----------------OLD CODE-----------------------\n        // <div className='signin-container'>\n        //     <div className=\"signin-card\">\n        //         <form onSubmit={handleForm}>\n        //             <h2 className=\"signin-title\"> Log in</h2>\n        //             <p className=\"line\"></p>\n        //             <div className=\"error-message\"><p>{error}</p></div>\n        //             <div className=\"signin-fields\">\n        //                 <label htmlFor=\"email\"> <b>Email</b></label>\n        //                 <input className='signin-textbox' type=\"email\" placeholder=\"Enter Email\" name=\"username\" required onChange={(e) => { setEmail(e.target.value) }} />\n        //                 <label htmlFor=\"password\"><b>Password</b></label>\n        //                 <input className='signin-textbox' type=\"password\" minLength='6' placeholder=\"Enter Password\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value) }} />\n        //             </div>\n        //             <button className=\"signin-button\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"#ffffff\" /> : \"Log In\"}</button>\n        //             <a className=\"forget-pass\" href=\"#home\">Forgot password?</a>\n        //         </form>\n        //         <div className='signup-option'>\n        //             <p className=\"signup-question\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n        //         </div>\n        //     </div>\n        // </div>\n        // -------------------------------------------------\n\n        <div className='signin-container'>\n            <div class=\"left\">\n                <div class=\"overlay\">\n                    <div className='content'> <h1>Join us with Amigochat.</h1>\n                    </div>\n                </div>\n            </div>\n            <div className=\"signin-card\">\n                <form onSubmit={handleForm}>\n                    <h2 className=\"signin-title\"> Log In</h2>\n                    <p className=\"line\"></p>\n                    <div className=\"error-message\"><p>{error}</p></div>\n                    <div className=\"signin-fields\">\n                        <label htmlFor=\"email\"> <b>Email</b></label>\n                        <input className='signin-textbox' type=\"email\" placeholder=\"Enter Email\" name=\"username\" required onChange={( e ) => { setEmail( e.target.value ) }} />\n                        <label htmlFor=\"password\"><b>Password</b></label>\n                        <input className='signin-textbox' type=\"password\" minLength='6' placeholder=\"Enter Password\" name=\"psw\" required onChange={( e ) => { setPassword( e.target.value ) }} />\n                    </div>\n                    <button className=\"signin-button\" disabled={isFetching}>{isFetching ? <CircularProgress color=\"#ffffff\" /> : \"Log In\"}</button>\n                    <a className=\"forget-pass\" href=\"#home\">Forgot password?</a>\n                </form>\n                <div className='signup-option'>\n                    <p className=\"signup-question\">Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Signin","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Signin-up.css\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nfunction Signup() {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [username, setUsername] = useState();\n  const [photo, setPhoto] = useState( \"\" );\n  const [error, setError] = useState( \"\" );\n  const [isLoading, setIsLoading] = useState( false )\n  const history = useHistory();\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  const handleForm = async ( e ) => {\n    e.preventDefault();\n    setIsLoading( true )\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const data = new FormData();\n    data.append( \"username\", username );\n    data.append( \"email\", email );\n    data.append( \"password\", password );\n\n    if ( photo !== \"\" ) {\n      data.append( \"photo\", photo );\n    }\n\n    try {\n      await axios.post( API_URL + \"api/auth/signup\", data, config );\n      history.push( \"/signin\" );\n    } catch ( err ) {\n      console.log( err );\n      setError( \"Username Already Exist\" )\n    }\n    setIsLoading( false )\n  };\n\n  return (\n    // ----------------OLD CODE-----------------------\n    // <div className=\"signup-container\">\n    //   <div className=\"signup-card\">\n    //     <form onSubmit={handleForm}>\n    //       <h2 className=\"signup-title\"> Register </h2>\n    //       <p className=\"line\"></p>\n    //       <div className=\"error-message\"><p>{error}</p></div>\n    //       <div className=\"signup-fields\">\n    //         <label htmlFor=\"username\"> {\" \"} <b>Username</b></label>\n    //         <input className=\"signup-textbox\" type=\"text\" placeholder=\"Enter Username\" name=\"username\" required onChange={(e) => { setUsername(e.target.value); }} />\n    //         <label htmlFor=\"email\">{\" \"}<b>Email</b></label>\n    //         <input className=\"signup-textbox\" type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={(e) => { setEmail(e.target.value); }} />\n    //         <label htmlFor=\"password\"> <b>Password</b></label>\n    //         <input className=\"signup-textbox\" type=\"password\" placeholder=\"Enter Password\" minLength=\"6\" name=\"psw\" required onChange={(e) => { setPassword(e.target.value); }} />\n    //         <label><b>Image(You can add Image later)</b></label>\n    //         <input className=\"file-input\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" name=\"photo\" onChange={(e) => { setPhoto(e.target.files[0]); }} />\n    //       </div>\n    //       <button className=\"signup-button\" disabled={isLoading}>{isLoading ?<CircularProgress color=\"#ffffff\" size=\"18px\"/> : \"Sign Up\"}</button>\n    //     </form>\n    //     <div className=\"signup-option\">\n    //       <p className=\"signup-question\">\n    //         Have an account? <Link to=\"/signin\">Sign In</Link>\n    //       </p>\n    //     </div>\n    //   </div>\n    // </div>\n    // -------------------------------------------------\n\n    <div className=\"signup-container\">\n      <div class=\"left1\">\n        <div class=\"overlay\">\n          <div className='content'> <h1>Join us with Amigochat.</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"signup-card\">\n        <form onSubmit={handleForm}>\n          <h2 className=\"signup-title\"> Register </h2>\n          <p className=\"line\"></p>\n          <div className=\"error-message\"><p>{error}</p></div>\n          <div className=\"signup-fields\">\n            <label htmlFor=\"username\"> {\" \"} <b>Username</b></label>\n            <input className=\"signup-textbox\" type=\"text\" placeholder=\"Enter Username\" name=\"username\" required onChange={( e ) => { setUsername( e.target.value ); }} />\n            <label htmlFor=\"email\">{\" \"}<b>Email</b></label>\n            <input className=\"signup-textbox\" type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={( e ) => { setEmail( e.target.value ); }} />\n            <label htmlFor=\"password\"> <b>Password</b></label>\n            <input className=\"signup-textbox\" type=\"password\" placeholder=\"Enter Password\" minLength=\"6\" name=\"psw\" required onChange={( e ) => { setPassword( e.target.value ); }} />\n            <label><b>Image(You can add Image later)</b></label>\n            <input className=\"file-input\" type=\"file\" accept=\".png, .jpg, .jpeg, .gif\" name=\"photo\" onChange={( e ) => { setPhoto( e.target.files[0] ); }} />\n          </div>\n          <button className=\"signup-button\" disabled={isLoading}>{isLoading ? <CircularProgress color=\"#ffffff\" size=\"18px\" /> : \"Sign Up\"}</button>\n        </form>\n        <div className=\"signup-option\">\n          <p className=\"signup-question\">\n            Have an account? <Link to=\"/signin\">Sign In</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react'\nimport './Message.css'\nimport { format } from \"timeago.js\"\n\nfunction Message({message,own}) {\n    return (\n        <div>\n            <p className={own?'message-sent':'message-received'}>\n                <span>{message.text}</span>\n                <span className='message-time'>{format(message.createdAt)}</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Message\n","import axios from 'axios';\nimport React, { useContext, useState } from 'react'\nimport { AuthContext } from '../Context/AuthContext';\nimport './AddAmigo.css'\n\nfunction AddAmigo({addchattoggler,addchattoggle}) {\n\n    const [amigousername, setAmigoUsername] = useState()\n    const { user } = useContext(AuthContext)\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await axios.get(`${API_URL}api/users/?username=${amigousername}`)\n            setAmigoUsername(\"\")\n            const data = {\n                senderId: user._id,\n                receiverId: response.data._id\n            }\n            await axios.post(API_URL+'api/chatrooms', data)\n        }\n        catch (err) {\n        }\n        window.location.reload();\n    }\n\n    return (\n        <div className='add-amigo-background'>\n            <div className={addchattoggle?\"add-amigo-open\":\"add-amigo-close\"}>\n                <div className=\"close-div\" ><span onClick={addchattoggler}><p className=\"close-symbol\">x</p></span></div>\n                <form>\n                    <img className='add-amigo-img' src='assets/addamigo.png' alt=''></img>\n                    <input type=\"text\" placeholder=\"Enter Username of Amigo\" value={amigousername} onChange={(e) => { setAmigoUsername(e.target.value) }} required />\n                    <button onClick={handleSubmit}>ADD AMIGO</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddAmigo\n","import React, { useContext, useState } from \"react\";\nimport \"./ProfilePage.css\";\nimport { AuthContext } from \"../Context/AuthContext\";\nimport axios from \"axios\";\n\nfunction ProfilePage({ toggler, togglestate }) {\n\n  const { user } = useContext(AuthContext);\n  const [username, setUsername] = useState(user.username)\n  const [photo, setPhoto] = useState(\"\")\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n\n    const updated_data = new FormData();\n    updated_data.append(\"username\", username);\n    if (photo !== \"\") {\n      updated_data.append(\"photo\", photo);\n    }\n\n    try {\n      await axios.put(API_URL + 'api/users/' + user?._id, updated_data, config)\n      const result = await axios.get(API_URL+\"api/users/\"+user?._id)\n      const data = JSON.stringify(result.data)\n      localStorage.setItem(\"user\",data)\n    }\n    catch (err) {\n      console.log(err)\n    }\n    window.location.reload()\n  }\n\n  return (\n    <div className=\"profile\">\n      <div className={togglestate ? \"profile-card-open\" : \"profile-card-close\"}>\n        <div className=\"close-div\">\n          <span onClick={toggler}>\n            <p className=\"close-symbol\">x</p>\n          </span>\n        </div>\n        <img className=\"profile-image\" src={user?.photo ? API_URL+\"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt=\"\"></img>\n        <form>\n          <label htmlFor=\"username\">Username</label>\n          <input type=\"text\" className=\"username-input\" value={username} onChange={(e) => { setUsername(e.target.value) }} required></input>\n          <input\n            className=\"update-profilepic\"\n            type=\"file\"\n            accept=\".png, .jpg, .jpeg, .gif\"\n            name=\"photo\"\n            onChange={(e) => {\n              setPhoto(e.target.files[0]);\n            }}\n          />\n          <button onClick={handleSubmit}>UPDATE</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n","import React, { useEffect, useRef, useState } from 'react'\nimport './SidebarChat.css'\nimport axios from 'axios'\nimport { io } from \"socket.io-client\"\n\nfunction SidebarChat({ chatroomtile, currentUser }) {\n\n    const [user, setUser] = useState(null)\n    const [online, setOnline] = useState(false);\n    const socket = useRef()\n\n    const API_URL = process.env.REACT_APP_API_URL\n\n    useEffect(() => {\n        socket.current = io(API_URL);\n    }, [API_URL])\n\n    useEffect(() => {\n        const amigoId = chatroomtile.members.find((m) => m !== currentUser._id);\n        socket.current.on(\"getUsers\", (users) => {\n            setOnline(users.find((user) => user.userId === amigoId));\n        })\n        const getAmigodetails = async () => {\n            try {\n                const response = await axios.get(API_URL + 'api/users/' + amigoId)\n                setUser(response.data)\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        getAmigodetails()\n    }, [currentUser, chatroomtile, online, API_URL])\n\n    return (\n        <div className='sidebarchat'>\n            <img className='amigo-profilepic' src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\n            <div className={online ? \"online\" : \"offile\"}></div>\n            <p className=\"sidebarchat-info-name\">{user != null ? user.username : \"\"}</p>\n        </div>\n    )\n}\n\nexport default SidebarChat","import React from \"react\";\nimport \"./EmptyChatRoom.css\";\n\nfunction EmptyChatRoom() {\n  return (\n    <div>\n      <div className=\"EmptyChatroom\">\n        <img className=\"emptychatroom-img\"\n          src=\"assets/home.png\"\n          alt=\"\"\n        ></img>\n        <p className=\"empty-chatroom-mainhead\">Start Chatting with Your Amigo🤝</p>\n        {/* <p className=\"empty-chatroom-subhead\">\n          Select an Amigo from the Sidebar and Start conversation.Add Amigos by\n          username from the option in the top right corner of the page\n        </p> */}\n      </div>\n    </div>\n  );\n}\n\nexport default EmptyChatRoom;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport \"./HomeCSS/Home.css\";\nimport \"./HomeCSS/Sidebar.css\";\nimport \"./HomeCSS/ChatRoom.css\";\nimport Message from \"../Components/Message.js\";\nimport AddAmigo from \"../Components/AddAmigo.js\";\nimport ProfilePage from \"../Components/ProfilePage\";\nimport SidebarChat from \"../Components/SidebarChat.js\";\nimport EmptyChatRoom from \"../Components/EmptyChatRoom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { IconButton } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\n\nfunction Home() {\n  const [chatroomtiles, setChatroomtiles] = useState([]);\n  const [currentchat, setCurrentchat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [amigo, setAmigo] = useState();\n  const [open, setOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const scrollRef = useRef();\n  const socket = useRef();\n\n  const API_URL = process.env.REACT_APP_API_URL\n\n  /* Making Messages Realtime */\n\n  useEffect(() => {\n    socket.current = io(API_URL);\n    socket.current.on(\"getMessage\", (data) => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now(),\n      });\n    });\n  }, [API_URL]);\n\n  useEffect(() => {\n    arrivalMessage &&\n      currentchat?.members.includes(arrivalMessage.sender) &&\n      setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentchat]);\n\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user?._id);\n  }, [user, chatroomtiles, currentchat, socket]);\n\n  /* Fetching the Chat Tiles */\n\n  useEffect(() => {\n    const getChatroomtiles = async () => {\n      try {\n        const res = await axios.get(API_URL + \"api/chatrooms/\" + user._id);\n        setChatroomtiles(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getChatroomtiles();\n  }, [user?._id, API_URL]);\n\n  /* Fetching the Chat Tile user details */\n\n  useEffect(() => {\n    const amigoId = currentchat?.members.find((m) => m !== user._id);\n    const getAmigodetails = async () => {\n      try {\n        const response = await axios.get(API_URL + \"api/users/\" + amigoId);\n        setAmigo(response.data);\n      } catch (err) { }\n    };\n    getAmigodetails();\n  }, [user, currentchat, API_URL]);\n\n  /* Fetching ChatRoom Messages */\n\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const response = await axios.get(API_URL + \"api/messages/\" + currentchat?._id);\n        setMessages(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getMessages();\n  }, [currentchat, API_URL]);\n\n  /* Scroll to the recent message */\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  /* Emoji Picker */\n\n  const addEmoji = (e) => {\n    let emoji = e.native;\n    setNewMessage(newMessage + emoji);\n  };\n  const [pick, setPick] = useState(false);\n  const openPicker = () => {\n    setPick(!pick);\n  };\n\n  /* Posting a Message */\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const sendingMessage = {\n      chatroomId: currentchat._id,\n      senderId: user._id,\n      text: newMessage,\n    };\n\n    const receiverId = currentchat.members.find(\n      (member) => member !== user._id\n    );\n\n    socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId,\n      text: newMessage,\n    });\n\n    try {\n      const response = await axios.post(API_URL + \"api/messages/\", sendingMessage);\n      setMessages([...messages, response.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n    setPick(false)\n  };\n\n  /* Logout */\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  };\n\n  /* AddChat Toggle Setup */\n\n  const [addtoggle, setAddtoggle] = useState(false);\n  const addchatToggler = () => {\n    addtoggle === false ? setAddtoggle(true) : setAddtoggle(false);\n    console.log(addtoggle);\n  };\n\n  /* Profile Page Toggle Setup */\n\n  const [profiletoggle, setProfiletoggle] = useState(false);\n  const profiletoggler = () => {\n    profiletoggle === false ? setProfiletoggle(true) : setProfiletoggle(false);\n  };\n\n  return (\n    <div className=\"home\">\n      {/* Chat Adding Card */}\n      <AddAmigo addchattoggler={() => { addchatToggler(); }} addchattoggle={addtoggle} />\n\n      {/* Profile Page Card - Update */}\n      <ProfilePage toggler={() => { profiletoggler(); }} togglestate={profiletoggle} />\n\n      {/* Sidebar Open Menu */}\n      {open\n        ? \"\"\n        : <div className=\"menu-open\" onClick={() => { setOpen(true); }} >\n          <IconButton>\n            <MenuIcon style={{ fontSize: 35, color: \"#316af3\" }} />\n          </IconButton>\n        </div>\n      }\n\n      {/* Add Chat Icon */}\n      <div className=\"add-chatroom-icon\" onClick={addchatToggler}>\n        <IconButton>\n          <PersonAddIcon />\n        </IconButton>\n      </div>\n\n      {/* Sidebar, ChatRoom */}\n      <div className=\"home-components\">\n\n        {/* Sidebar */}\n        <div className={open ? \"sidebar active\" : \"sidebar\"}>\n          <div className=\"sidebar-header\">\n            <div className=\"menu-close\" onClick={() => { setOpen(false); }} >\n              <IconButton>\n                <CloseIcon style={{ fontSize: 35, color: \"white\" }} />\n              </IconButton>\n            </div>\n            <IconButton onClick={() => { profiletoggler(); }} >\n              <img className=\"user-profile-image\" src={user?.photo ? API_URL + \"photo/\" + user?.photo : \"assets/noavatar.jpg\"} alt='' />\n            </IconButton>\n            <div className=\"logout-option\">\n              <IconButton onClick={logout}>\n                <ExitToAppIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div className=\"sidebar-search\">\n            <div className=\"sidebar-search-container\">\n              <SearchIcon className=\"sidebar-searchicon\" />\n              <input type=\"text\" name=\"chat-search\" placeholder=\"Search a Chat\" />\n            </div>\n          </div>\n\n          {/* Chatroom tiles */}\n\n          <div className=\"sidebar-chatoptions\">\n            {chatroomtiles.map((chatroomtile) => (\n              <div\n                key={chatroomtile?._id}\n                onClick={() => { setCurrentchat(chatroomtile); setOpen(false) }} >\n                <SidebarChat chatroomtile={chatroomtile} currentUser={user} />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Chatroom */}\n        <div className=\"chatroom\">\n          {currentchat ? (\n            <>\n              <div className=\"chatroom-header\">\n                <div className=\"chatroom-chatinfo\">\n                  <img className='amigo-profilepic' src={amigo?.photo ? API_URL + \"photo/\" + amigo?.photo : \"assets/noavatar.jpg\"} alt='' />\n\n                  <div className=\"chatroom-chatinfo-right\">\n                    <div className=\"chatroom-chatinfo-name\">\n                      <p>{amigo?.username}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"chatroom-messages-container\" onClick={() => { setPick(false) }}>\n                {messages.map((message) => (\n                  <div key={message?._id} ref={scrollRef}>\n                    <Message message={message} own={message?.senderId === user._id} />\n                  </div>\n                ))}\n              </div>\n              <div className={pick ? \"emoji-picker-open\" : \"emoji-picker-close\"} >\n                <Picker onSelect={addEmoji} emojiSize={25} />\n              </div>\n              <div className=\"chatroom-footer\">\n                <div className=\"chatroom-footer-lefticons\">\n                  <IconButton onClick={openPicker}>\n                    <InsertEmoticonIcon />\n                  </IconButton>\n                  <IconButton>\n                    <AttachFileIcon />\n                  </IconButton>\n                </div>\n                <form>\n                  <input className=\"message-input\" type=\"text\" name=\"message-input\" placeholder=\"Type a message\" onChange={(e) => { setNewMessage(e.target.value); }} value={newMessage} required />\n                  <button className=\"input-button\" onClick={newMessage ? handleSubmit : null} > Send a Message </button>\n                </form>\n                <div className=\"chatroom-footer-righticon\" onClick={newMessage ? handleSubmit : null} >\n                  <IconButton>\n                    <SendIcon className=\"send-icon\" />\n                  </IconButton>\n                </div>\n              </div>\n            </>\n          ) : (\n            <EmptyChatRoom />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import Signin from \"./Pages/Signin.js\"\nimport Signup from \"./Pages/Signup.js\"\nimport Home from \"./Pages/Home.js\"\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport { useContext } from \"react\"\nimport { AuthContext } from \"./Context/AuthContext.js\"\n\nfunction App() {\n  \n  const { user } = useContext(AuthContext)\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            {user ? <Home /> : <Signin />}\n          </Route>\n          <Route exact path='/signin'>\n            {user ? <Redirect to='/' /> : <Signin />}\n          </Route>\n          <Route exact path='/signup'>\n            {user ? <Redirect to='/' /> : <Signup/>}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthContextProvider} from \"./Context/AuthContext\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}